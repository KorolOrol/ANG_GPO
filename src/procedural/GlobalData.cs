using System;

public class GlobalData
{
    public static int[,] tabl = new int[,]
    {
        {0, 0, 3, 2, 3, 2, 2, 2, 3, 1, 2, 1, 1, 3, 2, 2, 0, 3, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 1, 2, 1, 2, 0, 3, 1, 1, 3, 3, 1, 1, 2},
        {0, 0, 1, 3, 2, 2, 3, 1, 1, 3, 1, 2, 1, 1, 2, 1, 3, 0, 2, 1, 2, 0, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1},
        {3, 1, 0, 0, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 3, 1, 3, 1},
        {2, 3, 0, 0, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 3, 1, 2, 3, 1, 1, 2, 1, 2, 0, 3, 2, 1, 1, 2, 3, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2},
        {3, 2, 2, 1, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1},
        {2, 2, 2, 2, 0, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 0, 3, 1, 1, 2, 2, 3, 2, 1, 2, 2, 2, 1, 2, 2, 0, 2, 3, 1, 2, 1},
        {2, 3, 2, 1, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1},
        {2, 1, 2, 1, 1, 1, 0, 0, 1, 1, 2, 2, 1, 2, 3, 2, 2, 3, 1, 2, 2, 3, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 1},
        {3, 1, 2, 1, 2, 1, 2, 1, 0, 0, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 3, 1, 1, 1},
        {1, 3, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 3, 1, 2, 1, 2, 1, 1, 2, 3, 2, 1, 2, 3, 1, 1, 1, 1, 1},
        {2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 3, 1, 1, 1, 3, 1, 3, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 3, 3, 2, 2, 1},
        {1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 1, 2, 0, 2, 1, 2, 1, 1, 2, 0, 2, 2, 1, 1, 1, 1, 1},
        {1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 2, 1, 2, 0, 3, 2, 1, 3, 1, 0, 2, 1, 2, 0, 3, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 3, 0},
        {3, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 1, 2, 1, 3, 2, 1, 1, 3, 2, 2, 0, 3, 2, 2, 1, 2, 1, 3, 1, 2, 3, 3, 3, 1, 1, 1, 2},
        {2, 2, 2, 1, 2, 2, 2, 3, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1},
        {2, 1, 2, 3, 2, 1, 1, 2, 1, 2, 3, 1, 1, 2, 0, 0, 1, 2, 1, 1, 2, 2, 1, 2, 0, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2},
        {0, 3, 1, 1, 2, 1, 3, 2, 2, 1, 1, 2, 2, 1, 2, 1, 0, 0, 1, 1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 3, 1, 0, 3, 2, 1, 1, 1, 1},
        {3, 0, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1, 0, 3, 1, 2, 0, 0, 1, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 2, 2, 3, 0, 3, 3, 1, 2, 3, 2, 0, 3},
        {3, 2, 2, 3, 1, 1, 2, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 1, 0, 0, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 0, 3, 2, 1, 3, 1, 2, 0, 2, 2, 2},
        {1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 3, 1, 2, 1, 1, 1, 1, 1, 0, 0, 2, 3, 0, 2, 2, 1, 1, 1, 1, 1, 3, 3, 1, 3, 2, 2, 1, 3, 1, 1, 1},
        {2, 2, 1, 1, 2, 0, 2, 2, 3, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0, 1, 1, 2, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, 2},
        {3, 0, 2, 2, 0, 3, 1, 3, 1, 2, 3, 3, 3, 3, 2, 2, 0, 2, 1, 3, 0, 0, 0, 2, 1, 3, 3, 1, 1, 3, 3, 3, 1, 2, 3, 3, 1, 3, 1, 2, 1},
        {1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 0, 0, 0, 1, 2, 1, 1, 1, 1, 0, 3, 2, 1, 3, 3, 2, 1, 1, 2, 2},
        {1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 0, 2, 1, 2, 1, 2, 1, 2, 0, 2, 0, 0, 1, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1},
        {1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 2, 1, 2, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 3, 1, 2, 2, 1, 1, 0, 3, 3, 3, 0, 2, 1},
        {3, 1, 1, 3, 0, 2, 3, 3, 2, 2, 2, 2, 1, 3, 2, 2, 1, 3, 1, 1, 1, 3, 2, 3, 0, 0, 3, 1, 2, 1, 3, 3, 1, 2, 1, 3, 3, 3, 1, 1, 1},
        {3, 1, 1, 2, 0, 3, 2, 2, 2, 1, 1, 0, 2, 2, 3, 2, 2, 3, 1, 1, 0, 3, 1, 1, 0, 3, 0, 0, 1, 1, 1, 2, 1, 3, 1, 1, 2, 3, 1, 2, 1},
        {2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 0, 2, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 1, 2, 1, 2, 1},
        {1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 0, 0, 0, 1, 2, 2, 1, 0, 0, 2, 1, 1, 2, 3},
        {2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 3, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 3, 1, 3, 2},
        {1, 1, 1, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 0, 3, 1, 3, 0, 2, 2, 3, 1, 1, 1, 2, 0, 0, 1, 2, 2, 2, 0, 1, 1, 0, 1},
        {2, 2, 1, 2, 1, 2, 2, 1, 2, 3, 1, 1, 1, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 1, 2, 2, 0, 0, 1, 3, 2, 3, 2, 3, 1, 3, 2},
        {0, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 3, 0, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 0, 1, 1, 2},
        {3, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 0, 1, 2, 2, 2, 1, 3, 1, 3, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 2, 3, 0, 0, 3, 3, 3, 3, 2, 2, 3},
        {1, 1, 1, 1, 1, 2, 1, 3, 2, 2, 1, 2, 2, 3, 2, 1, 0, 3, 3, 2, 1, 3, 3, 1, 0, 1, 1, 2, 0, 3, 2, 2, 0, 3, 0, 3, 2, 3, 1, 1, 2},
        {1, 1, 1, 1, 1, 0, 1, 3, 2, 3, 1, 2, 1, 3, 2, 1, 3, 1, 1, 2, 3, 3, 3, 2, 3, 3, 1, 0, 0, 3, 2, 3, 0, 3, 3, 0, 3, 2, 1, 1, 1},
        {3, 2, 2, 3, 1, 2, 2, 3, 2, 1, 3, 1, 2, 3, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 3, 3, 2, 1, 2, 2, 0, 2, 2, 3, 2, 3, 0, 3, 0, 3, 3},
        {3, 2, 3, 2, 0, 3, 1, 3, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 0, 3, 1, 3, 1, 2, 3, 3, 3, 2, 1, 3, 1, 3, 0, 3, 3, 2, 3, 0, 3, 0, 3},
        {1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 3, 0, 1, 1},
        {1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 1, 0, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 3, 0, 3, 1, 2, 1, 1, 3, 0, 1, 0, 0},
        {2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 2, 2, 3, 2, 1, 3, 3, 1, 0, 0},
    };

    public static List<Trait> traits_list = new List<Trait>()
    {
        new Trait("Амбициозный", "Имеющий или проявляющий притязания на достижение значительных целей, больших успехов."),    // Ambitious
        new Trait("Приземлённый", "Трезво оценивающий реальную действительность, избегающий иллюзий."),   // Content
                                     
        new Trait("Храбрый", new List<string>
        {
            "Не знающий страха, решительный.",
            "Не знает страха в минуту опасности, способен преодолеть его.",
            "Легко рискующий своей жизнью ради достижения цели или спасения другого человека."
        }),        // Brave
        new Trait("Трусливый", new List<string>
        {
            "Робкий, боязливый.",
            "Склонен к боязни и панике, избегает опасных ситуаций.",
            "Боящийся даже незначительных опасностей."
        }),      // Craven
                                     
        new Trait("Спокойный"),      // Calm
        new Trait("Гневный"),        // Wrathful
                                     
        new Trait("Целомудренный"),  // Chastle
        new Trait("Похотливый"),     // Lustful
                                     
        new Trait("Усердный"),       // Diligent
        new Trait("Ленивый"),        // Lazy
                                     
        new Trait("Общительный"),    // Generous
        new Trait("Стеснительный"),  // Shy
                                     
        new Trait("Щедрый"),         // Gregarious
        new Trait("Жадный"),         // Greedy
                                     
        new Trait("Честный"),        // Honest
        new Trait("Лживый"),         // Deceitful
                                     
        new Trait("Скромный"),       // Humble
        new Trait("Высокомерный"),   // Arrogant
                                     
        new Trait("Взвешенный"),     // Just
        new Trait("Взбалмошный"),    // Arbitrary
                                     
        new Trait("Терпеливый"),     // Patient
        new Trait("Нетерпеливый"),   // Impatient
                                     
        new Trait("Сдержанный"),     // Temperate
        new Trait("Прожорливый"),    // Gluttonous
                                     
        new Trait("Доверчивый"),     // Trusting
        new Trait("Параноик"),       // Paranoid
                                     
        new Trait("Ревностный"),     // Zealous
        new Trait("Циничный"),       // Cynical
                                     
        new Trait("Сочувствующий"),  // Compassionate
        new Trait("Жестокий"),       // Callous
                                     
        new Trait("Переменчивый"),   // Fickle
        new Trait("Упёртый"),        // Stubborn
                                     
        new Trait("Заурядный"),      // Ordinary
        new Trait("Эксцентричный"),  // Eccentric
                                     
        new Trait("Садист"),         // Sadistic
        new Trait("Мазохист"),       // Masochism
                                     
        new Trait("Религиозный"),    // Religious
        new Trait("Фанатик"),        // Fanatic
        new Trait("Атеист"),         // Aetheist
                                     
        new Trait("Справедливый"),   // Fair
        new Trait("Несправедливый"), // Unfair

    };
}
