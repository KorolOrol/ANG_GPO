using System;

public class GlobalData
{
    public static int[,] tabl = new int[,]
    {
        {0, 0, 3, 2, 3, 2, 2, 2, 3, 1, 2, 1, 1, 3, 2, 2, 0, 3, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 1, 2, 1, 2, 0, 3, 1, 1, 3, 3, 1, 1, 2},
        {0, 0, 1, 3, 2, 2, 3, 1, 1, 3, 1, 2, 1, 1, 2, 1, 3, 0, 2, 1, 2, 0, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1},
        {3, 1, 0, 0, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 3, 1, 3, 1},
        {2, 3, 0, 0, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 3, 1, 2, 3, 1, 1, 2, 1, 2, 0, 3, 2, 1, 1, 2, 3, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2},
        {3, 2, 2, 1, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1},
        {2, 2, 2, 2, 0, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 0, 3, 1, 1, 2, 2, 3, 2, 1, 2, 2, 2, 1, 2, 2, 0, 2, 3, 1, 2, 1},
        {2, 3, 2, 1, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1},
        {2, 1, 2, 1, 1, 1, 0, 0, 1, 1, 2, 2, 1, 2, 3, 2, 2, 3, 1, 2, 2, 3, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 1},
        {3, 1, 2, 1, 2, 1, 2, 1, 0, 0, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 3, 1, 1, 1},
        {1, 3, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 3, 1, 2, 1, 2, 1, 1, 2, 3, 2, 1, 2, 3, 1, 1, 1, 1, 1},
        {2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 3, 1, 1, 1, 3, 1, 3, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 3, 3, 2, 2, 1},
        {1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 1, 2, 0, 2, 1, 2, 1, 1, 2, 0, 2, 2, 1, 1, 1, 1, 1},
        {1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 2, 1, 2, 0, 3, 2, 1, 3, 1, 0, 2, 1, 2, 0, 3, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 3, 0},
        {3, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 1, 2, 1, 3, 2, 1, 1, 3, 2, 2, 0, 3, 2, 2, 1, 2, 1, 3, 1, 2, 3, 3, 3, 1, 1, 1, 2},
        {2, 2, 2, 1, 2, 2, 2, 3, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1},
        {2, 1, 2, 3, 2, 1, 1, 2, 1, 2, 3, 1, 1, 2, 0, 0, 1, 2, 1, 1, 2, 2, 1, 2, 0, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2},
        {0, 3, 1, 1, 2, 1, 3, 2, 2, 1, 1, 2, 2, 1, 2, 1, 0, 0, 1, 1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 3, 1, 0, 3, 2, 1, 1, 1, 1},
        {3, 0, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1, 0, 3, 1, 2, 0, 0, 1, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 2, 2, 3, 0, 3, 3, 1, 2, 3, 2, 0, 3},
        {3, 2, 2, 3, 1, 1, 2, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 1, 0, 0, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 0, 3, 2, 1, 3, 1, 2, 0, 2, 2, 2},
        {1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 3, 1, 2, 1, 1, 1, 1, 1, 0, 0, 2, 3, 0, 2, 2, 1, 1, 1, 1, 1, 3, 3, 1, 3, 2, 2, 1, 3, 1, 1, 1},
        {2, 2, 1, 1, 2, 0, 2, 2, 3, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0, 1, 1, 2, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, 2},
        {3, 0, 2, 2, 0, 3, 1, 3, 1, 2, 3, 3, 3, 3, 2, 2, 0, 2, 1, 3, 0, 0, 0, 2, 1, 3, 3, 1, 1, 3, 3, 3, 1, 2, 3, 3, 1, 3, 1, 2, 1},
        {1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 0, 0, 0, 1, 2, 1, 1, 1, 1, 0, 3, 2, 1, 3, 3, 2, 1, 1, 2, 2},
        {1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 0, 2, 1, 2, 1, 2, 1, 2, 0, 2, 0, 0, 1, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1},
        {1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 2, 1, 2, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 3, 1, 2, 2, 1, 1, 0, 3, 3, 3, 0, 2, 1},
        {3, 1, 1, 3, 0, 2, 3, 3, 2, 2, 2, 2, 1, 3, 2, 2, 1, 3, 1, 1, 1, 3, 2, 3, 0, 0, 3, 1, 2, 1, 3, 3, 1, 2, 1, 3, 3, 3, 1, 1, 1},
        {3, 1, 1, 2, 0, 3, 2, 2, 2, 1, 1, 0, 2, 2, 3, 2, 2, 3, 1, 1, 0, 3, 1, 1, 0, 3, 0, 0, 1, 1, 1, 2, 1, 3, 1, 1, 2, 3, 1, 2, 1},
        {2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 0, 2, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 1, 2, 1, 2, 1},
        {1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 0, 0, 0, 1, 2, 2, 1, 0, 0, 2, 1, 1, 2, 3},
        {2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 3, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 3, 1, 3, 2},
        {1, 1, 1, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 0, 3, 1, 3, 0, 2, 2, 3, 1, 1, 1, 2, 0, 0, 1, 2, 2, 2, 0, 1, 1, 0, 1},
        {2, 2, 1, 2, 1, 2, 2, 1, 2, 3, 1, 1, 1, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 1, 2, 2, 0, 0, 1, 3, 2, 3, 2, 3, 1, 3, 2},
        {0, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 3, 0, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 0, 1, 1, 2},
        {3, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 0, 1, 2, 2, 2, 1, 3, 1, 3, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 2, 3, 0, 0, 3, 3, 3, 3, 2, 2, 3},
        {1, 1, 1, 1, 1, 2, 1, 3, 2, 2, 1, 2, 2, 3, 2, 1, 0, 3, 3, 2, 1, 3, 3, 1, 0, 1, 1, 2, 0, 3, 2, 2, 0, 3, 0, 3, 2, 3, 1, 1, 2},
        {1, 1, 1, 1, 1, 0, 1, 3, 2, 3, 1, 2, 1, 3, 2, 1, 3, 1, 1, 2, 3, 3, 3, 2, 3, 3, 1, 0, 0, 3, 2, 3, 0, 3, 3, 0, 3, 2, 1, 1, 1},
        {3, 2, 2, 3, 1, 2, 2, 3, 2, 1, 3, 1, 2, 3, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 3, 3, 2, 1, 2, 2, 0, 2, 2, 3, 2, 3, 0, 3, 0, 3, 3},
        {3, 2, 3, 2, 0, 3, 1, 3, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 0, 3, 1, 3, 1, 2, 3, 3, 3, 2, 1, 3, 1, 3, 0, 3, 3, 2, 3, 0, 3, 0, 3},
        {1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 3, 0, 1, 1},
        {1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 1, 0, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 3, 0, 3, 1, 2, 1, 1, 3, 0, 1, 0, 0},
        {2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 2, 2, 3, 2, 1, 3, 3, 1, 0, 0},
    };

    public static List<Trait> traits_list = new List<Trait>()
    {
        new Trait("Амбициозный", new List<string> // Ambitious
        {
            "Имеющий или проявляющий притязания на достижение значительных целей, больших успехов.",
            "Имеющий или демонстрирующий амбиции, т.е. притязания на успех в соответствии с большими запросами и целями.",
            "Ставит перед собой высокие цели, стремится к успеху и постоянно работает над развитием своих навыков."

        }),
        new Trait("Приземлённый", new List<string> // Content
        {
            "Трезво оценивающий реальную действительность, избегающий иллюзий.",
            "Не витающий в облаках, избегающий мечтательности и идеализаций",
            "Реалистично оценивает свои возможности, умеет правильно расставлять приоритеты и не боится повседневных рутинных задач."
        }),
             
        

        new Trait("Храбрый", new List<string> // Brave
        {
            "Не знающий страха, решительный.",
            "Не знает страха в минуту опасности, способен преодолеть его.",
            "Легко рискующий своей жизнью ради достижения цели или спасения другого человека."
        }),
        new Trait("Трусливый", new List<string> // Craven
        {
            "Робкий, боязливый.",
            "Склонен к боязни и панике, избегает опасных ситуаций.",
            "Боящийся даже незначительных опасностей."
        }),
                 
        

        new Trait("Спокойный", new List<string> // Calm
        {
            "Не подверженный частым сменам настроения, уравновешенный, невозмутимый.",
            "Не теряющий самообладания даже в сложных ситуациях, умеющий контролировать свои эмоции.",
            "Хладнокровный, уравновешенный, не поддающийся эмоциональным всплескам."
        }),
        new Trait("Гневный", new List<string> // Wrathful
        {
            "Испытывающий или выражающий гнев, сильно сердящийся.",
            "Часто приходящий в состояние гнева, легко поддающийся негативным эмоциям.",
            "Охваченный, пребывающий в состоянии гнева, раздражения, злости."
        }),
                                     
        new Trait("Целомудренный", new List<string> // Chastle
        {
            "Отличающийся непорочностью, чистотой, строгостью в нравственном отношении.",
            "Соблюдающий строгие нормы морали и нравственности, избегающий всего, что может быть истолковано как нарушение этих норм.",
            "Характеризующийся непорочностью, чистотой, неповреждённый греховным опытом."
        }),
        new Trait("Похотливый", new List<string> // Lustful
        {
            "Испытывающий сильное половое влечение, сладострастный.",
            "Испытывающий чрезмерное половое влечение, одержимый сексуальными желаниями.",
            "Вожделеющий, чувственный, движимый похотью."
        }),
                 
        

        new Trait("Усердный", new List<string> // Diligent
        {
            "Всегда старается выполнить задачу наилучшим образом и доводит дело до конца.",
            "Всегда стремится к наилучшему выполнению задач, трудолюбив и не останавливается на достигнутом.",
            "Всегда доводит дело до конца, не боится трудностей и при необходимости готов потратить больше усилий для достижения результата."
        }),
        new Trait("Ленивый", new List<string> // Lazy
        {
            "Предпочитает отдых активной деятельности, склонен откладывать дела на потом.",
            "Не всегда склонен к активной деятельности, скорее предпочитает отдых работе, может быть менее успешен в делах.",
            "Избегает лишней нагрузки, предпочитает не тратить много сил на выполнение задач и может быть менее продуктивным по сравнению с другими людьми."
        }),
                   
        

        new Trait("Общительный", new List<string> // Generous
        {
            "Легко идёт на контакт, любит проводить время в компании, часто становится душой компании.",
            "Открыт к взаимодействию, любит общество и легко находит общий язык с другими людьми.",
            "Легко находит контакт с людьми, открытый и дружелюбный в общении, с удовольствием делится эмоциями и впечатлениями."
        }),
        new Trait("Стеснительный", new List<string> // Shy
        {
            "Испытывает неловкость и смущение в обществе других людей, предпочитает оставаться в тени.",
            "Может испытывать сложности в общении, иногда ему может быть нелегко заводить новые знакомства и открываться людям.",
            "Иногда испытывает трудности в начале общения, предпочитает более осторожный подход к взаимодействию с окружающими."
        }),
           
        

        new Trait("Щедрый", new List<string> // Gregarious
        {
            "Готовый делиться своими ресурсами, временем, энергией и вниманием.",
            "",
            ""
        }),
        new Trait("Жадный", new List<string> // Greedy
        {
            "Стремящийся получить как можно больше, не желающий делиться имеющимися ресурсами.",
            "",
            ""
        }),
                 
        

        new Trait("Честный", new List<string> // Honest
        {
            "",
            "",
            ""
        }),
        new Trait("Лживый", new List<string> // Deceitful
        {
            "",
            "",
            ""
        }),
                               
        

        new Trait("Скромный", new List<string> // Humble
        {
            "",
            "",
            ""
        }),
        new Trait("Высокомерный", new List<string> // Arrogant
        {
            "",
            "",
            ""
        }),
        
        

        new Trait("Взвешенный", new List<string> // Just
        {
            "",
            "",
            ""
        }),
        new Trait("Взбалмошный", new List<string> // Arbitrary
        {
            "",
            "",
            ""
        }),
               
        

        new Trait("Терпеливый", new List<string> // Patient
        {
            "",
            "",
            ""
        }),
        new Trait("Нетерпеливый", new List<string> // Impatient
        {
            "",
            "",
            ""
        }),
                           
        

        new Trait("Сдержанный", new List<string> // Temperate
        {
            "",
            "",
            ""
        }),
        new Trait("Прожорливый", new List<string> // Gluttonous
        {
            "",
            "",
            ""
        }),
                 
        

        new Trait("Доверчивый", new List<string> // Trusting
        {
            "",
            "",
            ""
        }),
        new Trait("Параноик", new List<string> // Paranoid
        {
            "",
            "",
            ""
        }),
                             
        

        new Trait("Ревностный", new List<string> // Zealous
        {
            "",
            "",
            ""
        }),
        new Trait("Циничный", new List<string> // Cynical
        {
            "",
            "",
            ""
        }),
                
        

        new Trait("Сочувствующий", new List<string> // Compassionate
        {
            "",
            "",
            ""
        }),
        new Trait("Жестокий", new List<string> // Callous
        {
            "",
            "",
            ""
        }),
            
        

        new Trait("Переменчивый", new List<string> // Fickle
        {
            "",
            "",
            ""
        }),
        new Trait("Упёртый", new List<string> // Stubborn
        {
            "",
            "",
            ""
        }),
            
        

        new Trait("Заурядный", new List<string> // Ordinary
        {
            "",
            "",
            ""
        }),
        new Trait("Эксцентричный", new List<string> // Eccentric
        {
            "",
            "",
            ""
        }),
            
        

        new Trait("Садист", new List<string> // Sadistic
        {
            "",
            "",
            ""
        }),
        new Trait("Мазохист", new List<string> // Masochism
        {
            "",
            "",
            ""
        }),
            
        

        new Trait("Религиозный", new List<string> // Religious
        {
            "",
            "",
            ""
        }),
        new Trait("Фанатик", new List<string> // Fanatic
        {
            "",
            "",
            ""
        }),
        new Trait("Атеист", new List<string> // Aetheist
        {
            "",
            "",
            ""
        }),
                          
        

        new Trait("Справедливый", new List<string> // Fair
        {
            "",
            "",
            ""
        }),
        new Trait("Несправедливый", new List<string> // Unfair
        {
            "",
            "",
            ""
        }),

    };
}
